@Test
public void GIVEN_pathFinder_WHEN_IsAskedToResolveEvenMoreComplexNonLinearPathMaze_THEN_MazeIsResolve(){

  final String FIRST_ROW =             "XXXXXXXXXXXXXXXXXXXX";
      final String SECOND_ROW =            "XXXXXXXXXXXXXXXXXXXX";
      final String THIRD_ROW =             "XXXXXXXXXXXXXXXXXXXX";
      final String FOURTH_ROW =            "XXXXXXXXX XXXXXXXXXX";
      final String FIFTH_ROW =             "XXXXXXXXX XXXXXXXXXX";
      final String SIXTH_ROW =             "XXXXXX   S   XXXXXXX";
      final String SEVENTH_ROW =           "XXXXXX XXXXXXXXXXXXX";
      final String EIGHT_ROW =             "XXXXXX  XXXXXXXXXXXX";
      final String NINETH_ROW =            "XXXE   XXXXXXXXXXXXX";
      final String TENTH_ROW =             "XXXXXX XXXXXXXXXXXXX";
      final String ELEVENTH_ROW =		     "XXXXXX XXXXXXXXXXXXX";
      final String TWELVETH_ROW =          "XXXXXXXXXXXXXXXXXXXX";
      final String THIRDTEENTH_ROW =       "XXXXXXXXXXXXXXXXXXXX";
      final String FOURTEENTH_ROW =        "XXXXXXXXXXXXXXXXXXXX";
      final String FIFTHEENTH_ROW =        "XXXXXXXXXXXXXXXXXXXX";
      final String SIXTEENTH_ROW =         "XXXXXXXXXXXXXXXXXXXX";
      final String SEVENTEENTH_ROW =       "XXXXXXXXXXXXXXXXXXXX";
      final String EIGHTEENTH_ROW =        "XXXXXXXXXXXXXXXXXXXX";
      final String NINETEENTH_ROW =        "XXXXXXXXXXXXXXXXXXXX";
      final String TWENTYTH_ROW =          "XXXXXXXXXXXXXXXXXXXX";


  final String MAZE = FIRST_ROW + SECOND_ROW + THIRD_ROW + FOURTH_ROW + FIFTH_ROW + SIXTH_ROW + SEVENTH_ROW + EIGHT_ROW + NINETH_ROW + TENTH_ROW + ELEVENTH_ROW + TWELVETH_ROW + THIRDTEENTH_ROW + FOURTEENTH_ROW + FIFTHEENTH_ROW + SIXTEENTH_ROW + SEVENTEENTH_ROW + EIGHTEENTH_ROW + NINETEENTH_ROW + TWENTYTH_ROW;

  PathFinderClockwise pathfinder = new PathFinderClockwise();

  //Act
  final String ACTUAL_MAZE = pathfinder.pathToExitClockwise(MAZE);

  //Assert
  final String EXPECTED_FIRST_ROW =             "XXXXXXXXXXXXXXXXXXXX";
      final String EXPECTED_SECOND_ROW =            "XXXXXXXXXXXXXXXXXXXX";
      final String EXPECTED_THIRD_ROW =             "XXXXXXXXXXXXXXXXXXXX";
      final String EXPECTED_FOURTH_ROW =            "XXXXXXXXX XXXXXXXXXX";
      final String EXPECTED_FIFTH_ROW =             "XXXXXXXXX XXXXXXXXXX";
      final String EXPECTED_SIXTH_ROW =             "XXXXXXPPPS   XXXXXXX";
      final String EXPECTED_SEVENTH_ROW =           "XXXXXXPXXXXXXXXXXXXX";
      final String EXPECTED_EIGHT_ROW =             "XXXXXXP XXXXXXXXXXXX";
      final String EXPECTED_NINETH_ROW =            "XXXEPPPXXXXXXXXXXXXX";
      final String EXPECTED_TENTH_ROW =             "XXXXXX XXXXXXXXXXXXX";
      final String EXPECTED_ELEVENTH_ROW =		  "XXXXXX XXXXXXXXXXXXX";
      final String EXPECTED_TWELVETH_ROW =          "XXXXXXXXXXXXXXXXXXXX";
      final String EXPECTED_THIRDTEENTH_ROW =       "XXXXXXXXXXXXXXXXXXXX";
      final String EXPECTED_FOURTEENTH_ROW =        "XXXXXXXXXXXXXXXXXXXX";
      final String EXPECTED_FIFTHEENTH_ROW =        "XXXXXXXXXXXXXXXXXXXX";
      final String EXPECTED_SIXTEENTH_ROW =         "XXXXXXXXXXXXXXXXXXXX";
      final String EXPECTED_SEVENTEENTH_ROW =       "XXXXXXXXXXXXXXXXXXXX";
      final String EXPECTED_EIGHTEENTH_ROW =        "XXXXXXXXXXXXXXXXXXXX";
      final String EXPECTED_NINETEENTH_ROW =        "XXXXXXXXXXXXXXXXXXXX";
      final String EXPECTED_TWENTYTH_ROW =          "XXXXXXXXXXXXXXXXXXXX";

      final String EXPECTED_MAZE = EXPECTED_FIRST_ROW + EXPECTED_SECOND_ROW + EXPECTED_THIRD_ROW + EXPECTED_FOURTH_ROW + EXPECTED_FIFTH_ROW + EXPECTED_SIXTH_ROW + EXPECTED_SEVENTH_ROW + EXPECTED_EIGHT_ROW + EXPECTED_NINETH_ROW + EXPECTED_TENTH_ROW + EXPECTED_ELEVENTH_ROW + EXPECTED_TWELVETH_ROW + EXPECTED_THIRDTEENTH_ROW + EXPECTED_FOURTEENTH_ROW + EXPECTED_FIFTHEENTH_ROW + EXPECTED_SIXTEENTH_ROW + EXPECTED_SEVENTEENTH_ROW + EXPECTED_EIGHTEENTH_ROW + EXPECTED_NINETEENTH_ROW + EXPECTED_TWENTYTH_ROW;

  assertEquals(EXPECTED_MAZE, ACTUAL_MAZE);
}
